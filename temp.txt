#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include "freertos/FreeRTOS.h"
#include "freertos/task.h"
#include "driver/gpio.h"

#define GPIO_INPUT_IR1          12
#define GPIO_INPUT_IR2          14
#define GPIO_INPUT_PIN_SEL      ((1ULL<<GPIO_INPUT_IR1) | (1ULL<<GPIO_INPUT_IR2))

void read_ir() {
    int in_out_stat = 0;
    while(1) {
        int ir1 = gpio_get_level(GPIO_INPUT_IR1);
        int ir2 = gpio_get_level(GPIO_INPUT_IR2);

        if (ir1 && ir2) {
            if (in_out_stat == 3) {
                printf("in");
            } else if (in_out_stat == -3) {
                printf("out");
            }
            in_out_stat = 0;
        } else if (!ir1 && ir2) {
            if (in_out_stat == -2) {
                in_out_stat = -3;
            } else if ((in_out_stat == 0) || (in_out_stat == 2)) {
                in_out_stat = 1;
            }
        } else if (!ir1 && !ir2) {
            if ((in_out_stat == 1) || (in_out_stat == 3)) {
                in_out_stat = 2;
            } else if ((in_out_stat == -1) || (in_out_stat == -3)) {
                in_out_stat = -2;
            }
        } else {
            if (in_out_stat == 2) {
                in_out_stat = 3;
            } else if ((in_out_stat == 0) || (in_out_stat == -2)) {
                in_out_stat = -1;
            }
        }
    }
}

void app_main()
{
    gpio_config_t io_conf;
    io_conf.intr_type = GPIO_PIN_INTR_DISABLE;
    io_conf.mode = GPIO_MODE_INPUT;
    io_conf.pin_bit_mask = GPIO_INPUT_PIN_SEL;
    io_conf.pull_down_en = 0;
    io_conf.pull_up_en = 1;
    gpio_config(&io_conf);
    printf("yes\n");
}